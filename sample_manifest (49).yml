NAME: redis-cluster-cicd-test
LAST DEPLOYED: Tue Jun 20 05:44:27 2023
NAMESPACE: rtns-dev
STATUS: deployed
REVISION: 1
TEST SUITE: None
USER-SUPPLIED VALUES:
null

COMPUTED VALUES:
image:
  pullPolicy: Always
imagePullSecrets: nexus-reg-secret
replicaCount: 6

HOOKS:
MANIFEST:
---
# Source: redis-cluster/templates/redis-cluster-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster
data:
  update-node.sh: |
    #!/bin/sh
    REDIS_NODES="/data/nodes.conf"
    sed -i -e "/myself/ s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/${POD_IP}/" ${REDIS_NODES}
    exec "$@"
  redis.conf: |+
    cluster-enabled yes
    cluster-require-full-coverage no
    cluster-node-timeout 15000
    cluster-config-file /data/nodes.conf
    cluster-migration-barrier 1
    appendonly yes
    protected-mode no
---
# Source: redis-cluster/templates/redis-startup.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-startup
data:
  redis-startup.sh: |
    #!/bin/sh
    CLUSTER_CONFIG="/data/nodes.conf"
    sed -i -e "/myself/ s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/${MY_POD_IP}/" ${CLUSTER_CONFIG}
    exec "$@"
    if [ -f "/data/nodes.conf" ]; then
      echo "Cluster details exists /data/nodes.conf.. starting script to do CLUSTER MEET when node is up" ${MY_POD_NAME} ${MY_POD_IP}
      while :
      do
        pong=$(timeout 5 redis-cli ping)
        if [ ${pong} == 'PONG' ];then
            nslookup ${MY_POD_NAME}.redis-cluster.rtns-dev.svc.cluster.local | grep "Address:" | tail -n +2 | awk '{print "CLUSTER MEET " $2 " 6379"}' > /tmp/redis_meet_commands.txt
            nslookup ${MY_POD_NAME}.redis-cluster.rtns-dev.svc.cluster.local | grep "Address:" | tail -n +2 | awk '{print $2}' > /tmp/redis_ip_list.txt
            echo "IP list"
            cat /tmp/redis_ip_list.txt
            echo "Cluster meet commands"
            cat /tmp/redis_meet_commands.txt
            while read line
            do
              echo "Cluster meet applying on ${line}"
              cat /tmp/redis_meet_commands.txt | redis-cli ${line}
            done < /tmp/redis_ip_list.txt
            exit 0
        fi
        sleep 10
      done
    else
      echo "Cluster details doesn't exist .. A new node"
    fi
---
# Source: redis-cluster/templates/redis-cluster-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    name: redis-cluster
  - port: 16379
    targetPort: 16379
    name: gossip
  selector:
    app: redis-cluster
---
# Source: redis-cluster/templates/redis-cluster.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
spec:
  replicas: 6
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: redis-cluster
  serviceName: redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      containers:
      - command:
        - /conf/update-node.sh
        - redis-server
        - /conf/redis.conf
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: nexusprod.corp.intranet:4567/devbaseimages/development_base_images/redis7:2023Q2
        imagePullPolicy: IfNotPresent
        name: redis-cluster
        ports:
        - containerPort: 6379
          name: redis-cluster
          protocol: TCP
        - containerPort: 16379
          name: gossip
          protocol: TCP
        resources:
          limits:
            memory: 500Mi
          requests:
            memory: 100Mi
        volumeMounts:
        - mountPath: /conf
          name: conf
      volumes:
      - configMap:
          defaultMode: 0755
          name: redis-cluster
        name: conf
      imagePullSecrets:
        - name: "nexus-reg-secret"
